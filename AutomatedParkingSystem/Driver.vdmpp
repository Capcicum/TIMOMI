class Driver is subclass of GLOBAL

instance variables
	paymentInfo : PaymentInfo;
	car : Car;
		 
operations

public Driver : String * Car ==> Driver
Driver(pParkingCard, pCar) == (
		paymentInfo := pParkingCard;
		car := pCar;
	);

public Driver : seq of nat * Car ==> Driver
Driver(pCreditCard, pCar) == (
		paymentInfo := pCreditCard;
		car := pCar;
	);	



public parkCar : InformationStation ==> ()
parkCar(pinfo) == 
	--eg := pinfo.findFreeGarage(););--.handleParking(car, paymentInfo); -- TODO find ud af hvordan jeg skal tjekke på om InformationStation finder en fri. 
	-- else -- What to do if no parking spots
	is not yet specified;

	
public retriveCar : InformationStation ==> () -- TODO
retriveCar(pis) ==
	is not yet specified;
	

--GETS

pure public getCreditCardInfo : () ==> seq of nat
getCreditCardInfo() == 
	return paymentInfo;

pure public getParkingCardInfo : () ==> String
getParkingCardInfo() == 
	return paymentInfo;

functions




end Driver