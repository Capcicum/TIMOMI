class ParkingLevel is subclass of GLOBAL

-- Inspiration from Airspace & Flying Object example

instance variables
	parkingSpots : set of Car;
inv forall x,y in set parkingSpots &
	x <> y => x.licensePlate <> y.licensePlate

operations

public parkCar : Car ==> ()
parkCar(pc) ==
	parkingSpots := parkingSpots union {pc}
pre pc.licensePlate not in set 
	{i.licensePlate | i in set parkingSpots};

public retriveCar : LicensePlate ==> ()
retriveCar(plpi) ==
	parkingSpots := parkingSpots \ {getCar(plpi)}
pre isCarParked(plpi, parkingSpots);

public getCar : LicensePlate ==> Car
getCar(plpi) ==
	let Car in set parkingSpots be st Car.licensePlate = plpi
	in
		return Car
pre isCarParked(plpi,parkingSpots);

functions

isCarParked: LicensePlate * set of Car -> bool
isCarParked(plpi,pps) ==
	exists Car in set pps & Car.licensePlate = plpi

end ParkingLevel