class ParkingLevel is subclass of GLOBAL

instance variables
parkingSpots : map LicensePlate to Car := {|->};
inv forall x,y in set rng parkingSpots & x <> y => x.licensePlate <> y.licensePlate

operations

public parkCar : Car ==> ()
parkCar(pcar) ==
	parkingSpots := parkingSpots munion {pcar.licensePlate |-> pcar}
pre forall i in set rng parkingSpots & pcar.licensePlate <> i.licensePlate;

public retriveCar : LicensePlate ==> Car
retriveCar(plp) == (
	dcl car : Car := parkingSpots(plp); 
	parkingSpots := {plp} <-: parkingSpots;
	return car;)
pre plp in set dom parkingSpots;
	
-- For testing purpose only:
pure public getParkingSpotsMap : () ==> map LicensePlate to Car
getParkingSpotsMap() == 
  return  parkingSpots;
 
functions

-- For testing purpose only:
public getNumberOfParkedCars : map LicensePlate to Car -> nat
getNumberOfParkedCars(pps) ==
	if pps = {|->}
	then 0
	else
		let y in set dom pps 
		in 
			1 + getNumberOfParkedCars(({y} <-: pps))
measure Card;

Card : map LicensePlate to Car -> nat
Card(pps) ==
	card dom pps
 
  
end ParkingLevel


