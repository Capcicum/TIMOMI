class ValidationServiceTest is subclass of TestCase, GLOBAL

--{"BH", "BU", "CC", "CD", "DK", "DU", "EU", "KZ", "MU", "PY", "SS", "UD", "UN", "VC", ""};
--{'I', 'Q', 'ф', 'ь', 'е', ' '};

--	plp.ns >= 5000 and plp.ns <= 5399 or
--	plp.ns >= 20000 and plp.ns <= 77999 or
--	plp.ns >= 98000 and plp.ns <= 99999;

values
car1 : Car = mk_Car(mk_LicensePlate(<Danish>, "PT", 49000), true); 
car2 : Car = mk_Car(mk_LicensePlate(<Danish>, "BH", 100000), true);
car3 : Car = mk_Car(mk_LicensePlate(<European>, "GI", 10000), true);
car4 : Car = mk_Car(mk_LicensePlate(<Danish>, "GO", 5400), true); 
car5 : Car = mk_Car(mk_LicensePlate(<Other>, "ее", 80000), true);

operations 

protected runTest : () ==> ()
runTest() == 
	(validateRegistrationLettersTest();
	 validateNumberSeriesTest());

protected validateRegistrationLettersTest : () ==> ()
validateRegistrationLettersTest() ==	(
	dcl validationService : ValidationService := new ValidationService();
	assertTrue(validationService.validateRegistrationLetters(car1.licensePlate) = true);
	assertTrue(validationService.validateRegistrationLetters(car2.licensePlate) = false);
	assertTrue(validationService.validateRegistrationLetters(car3.licensePlate) = false);
	assertTrue(validationService.validateRegistrationLetters(car4.licensePlate) = false);
	assertTrue(validationService.validateRegistrationLetters(car5.licensePlate) = false););
	
protected validateNumberSeriesTest : () ==> ()
validateNumberSeriesTest() ==	(
	dcl validationService : ValidationService := new ValidationService();
	assertTrue(validationService.validateNumberSeries(car1.licensePlate) = true);
	assertTrue(validationService.validateNumberSeries(car2.licensePlate) = false);
	assertTrue(validationService.validateNumberSeries(car3.licensePlate) = false);
	assertTrue(validationService.validateNumberSeries(car4.licensePlate) = false);
	assertTrue(validationService.validateNumberSeries(car5.licensePlate) = false););

end ValidationServiceTest