class ParkingLevelTest is subclass of TestCase, GLOBAL

values
car1 : Car = mk_Car(mk_LicensePlate(<Danish>, "PT", 49000), true); 
car2 : Car = mk_Car(mk_LicensePlate(<Danish>, "PT", 49001), true); 
operations 

protected runTest : () ==> ()
runTest() == 
	(parkCarTest();
	 retriveCarTest();
	 GetNumberOfParkedCarsTest(););

protected parkCarTest : () ==> ()
parkCarTest() == (
  dcl parkingLevel : ParkingLevel := new ParkingLevel();
  parkingLevel.parkCar(car1);
  assertTrue(parkingLevel.getNumberOfParkedCars(parkingLevel.getParkingSpotsMap()) = 1);
  parkingLevel.parkCar(car2);
	assertTrue(parkingLevel.getNumberOfParkedCars(parkingLevel.getParkingSpotsMap()) = 2););

protected retriveCarTest : () ==> ()
retriveCarTest() == (
	dcl parkingLevel : ParkingLevel := new ParkingLevel();
	parkingLevel.parkCar(car1);
	parkingLevel.parkCar(car2);
	assertTrue(parkingLevel.getNumberOfParkedCars(parkingLevel.getParkingSpotsMap()) = 2);
	assertTrue(parkingLevel.retriveCar(car1.licensePlate) = car1);
	assertTrue(parkingLevel.retriveCar(car2.licensePlate) = car2);	
	assertTrue(parkingLevel.getNumberOfParkedCars(parkingLevel.getParkingSpotsMap()) = 0););

protected GetNumberOfParkedCarsTest : () ==> ()
GetNumberOfParkedCarsTest() == (
	dcl parkingLevel : ParkingLevel := new ParkingLevel();
	parkingLevel.parkCar(car1);
	parkingLevel.parkCar(car2);
	assertTrue(parkingLevel.getNumberOfParkedCars(parkingLevel.getParkingSpotsMap()) = 2));

end ParkingLevelTest